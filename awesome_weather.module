<?php
/**
 * @file
 * Module file for awesome_weather.
 */

/**
 * Implements hook_help().
 */
function awesome_weather_help($path, $arg) {
  switch ($path) {
    case "admin/help#awesome_weather":
      return t('This module creates a block that displays weather information to logged in users.');

  }
}

/**
 * Build the form for the module settings page.
 */
function awesome_weather_admin() {
  $form = array();

  $form['awesome_weather_apikey'] = array(
    '#type' => 'textfield',
    '#title' => t('Open Weather API Key'),
    '#default_value' => variable_get('awesome_weather_apikey'),
    '#size' => 50,
    '#maxlength' => 50,
    '#description' => t("The Open Weather API Key."),
    '#required' => TRUE,
  );

  return system_settings_form($form);
}

/**
 * Implements hook_menu().
 */
function awesome_weather_menu() {

  $items = array();

  $items['admin/settings/awesome_weather'] = array(
    'title' => 'Awesome Weather module settings',
    'description' => 'Set up your api key.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('awesome_weather_admin'),
    'access arguments' => array('administer awesome_weather settings'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;
}


/**
 * Implements hook_block_info().
 *
 * This hook declares the block provided by this module.
 */
function awesome_weather_block_info() {
  $blocks['awesome_weather_block'] = array(
    // The name of the block. Displayed to the site admin in the list of blocks.
    'info' => t('Awesome weather'),
    'status' => TRUE,
    'region' => 'sidebar_first',
  );
  return $blocks;
}

/**
 * Implements hook_block_configure().
 *
 * Provides configuration options for our block.
 */
function awesome_weather_block_configure($delta = '') {
  $form = array();
  // The $delta parameter tells us which block is being configured.
  if ('awesome_weather_block' == $delta) {
    $form['awesome_weather_zipcode'] = array(
      '#type' => 'textfield',
      '#title' => t('Zipcode'),
      '#size' => 5,
      '#description' => t('The zipcode is used to get the weather information.'),
      '#default_value' => variable_get('awesome_weather_zipcode', '52302'),
    );
  }
  return $form;
}

/**
 * Implements hook_block_save().
 */
function awesome_weather_block_save($delta = '', $edit = array()) {
  // Make sure we are saving the right block.
  if ('awesome_weather_block' == $delta) {
    variable_set('awesome_weather_zipcode', $edit['awesome_weather_zipcode']);
  }
}

/**
 * Implements hook_block_view().
 *
 * Generate the content of our block.
 */
function awesome_weather_block_view($delta = '') {
  if ('awesome_weather_block' == $delta) {
    $block['subject'] = t('Your awesome weather information');
    // Callback function that generates the content for the block.
    $block['content'] = awesome_weather_block_contents();
    return $block;
  }
}

/**
 * This function generates the content for our block.
 */
function awesome_weather_block_contents() {

  $api_key = variable_get('awesome_weather_apikey');
  $zipcode = variable_get('awesome_weather_zipcode', '52302');
  if ($api_key) {
    if (!cache_get('awesome_weather_cache') || cache_get('awesome_weather_cache')->data['zipcode'] != $zipcode) {
      $options = array(
        'method' => 'GET',
        'timeout' => 5,
      );
      $result = drupal_http_request("https://api.openweathermap.org/data/2.5/weather?zip=$zipcode,us&appid=$api_key&units=imperial", $options);
      $data = drupal_json_decode($result->data);
      $data['zipcode'] = $zipcode;
      cache_set('awesome_weather_cache', $data, 'cache', REQUEST_TIME + (3600));
    }
    else {
      $data = cache_get('awesome_weather_cache')->data;
      dpm($data);
    }

    $icon_name = $data['weather'][0]['icon'];
    $icon_path = drupal_get_path('module', 'awesome_weather') . '/icons/' . $icon_name . '.svg';
    $temperature = $data['main']['temp'];
    $markup = "<div class='awesome-weather'><div class='awesome-weather__icon'><img src='$icon_path' /></div><div class='awesome-weather__temp'>$temperature F</div></div>";
  }

  else {
    $markup = "<p>You need to set up the Open Weather API key on the module configuration page.</p>";
  }

  $content = array(
    '#markup' => $markup,
  );
  return $content;
}